    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    
    body {
        width: 100vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    .cont-box {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 40vw;
        height: 40vw;
        border: 2px double #999;
        /* 使用纯黑色 和 白色filter不生效，颜色不偏移 */
        background-color: black;
        /* background-color: rgb(65, 58, 58); */
        animation: loopColor 3s linear infinite;
    }
    
    .cont-box .loop-circle {
        position: relative;
        width: 12vw;
        height: 12vw;
        animation: loopCirles infinite;
    }
    
    .cont-box .loop-circle span {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        /* 伪元素根据选择后的父元素定位 */
        transform: rotate(calc(30deg * var(--i)));
    }
    
    .cont-box .loop-circle span::before {
        content: '';
        position: absolute;
        right: 0;
        top: calc(6vw - 0.5vw);
        width: 1vw;
        height: 1vw;
        background-color: rgb(158, 228, 122);
        border-radius: 0.5vw;
        /* 阴影效果设置 */
        box-shadow: 0 0 10px rgb(158, 228, 122), 0 0 20px rgb(158, 228, 122), 0 0 40px rgb(158, 228, 122), 0 0 60px rgb(158, 228, 122), 0 0 80px rgb(158, 228, 122), 0 0 100px rgb(158, 228, 122);
        transform: scale(0.2);
        animation: loopCirles 3s linear infinite;
        animation-delay: calc(0.125s * var(--i));
    }
    
    .cont-box .loop-circle:last-of-type {
        /* 产生交叉点 */
        transform: rotate(-180deg);
        /* 定位 让二圆重叠 */
        position: relative;
        left: -1vw;
    }
    
    .cont-box .loop-circle:last-of-type span::before {
        /* 提前动画 */
        animation-delay: calc(-0.125s * var(--i));
        /* 相反的方向不适用 */
        /* animation-direction: reverse; */
    }
    
    @keyframes loopColor {
        0% {
            filter: hue-rotate(0deg);
        }
        100% {
            filter: hue-rotate(360deg);
        }
    }
    
    @keyframes loopCirles {
        /* 自定义动画样式 缩放*/
        0% {
            transform: scale(1)
        }
        100% {
            transform: scale(0.2)
        }
    }